# This workflow will build and push an application to a Azure Kubernetes Service (AKS) cluster when you push your code
#
# This workflow assumes you have already created the target AKS cluster and have created an Azure Container Registry (ACR)
# The ACR should be attached to the AKS cluster
# For instructions see:
#   - https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal
#   - https://docs.microsoft.com/en-us/azure/container-registry/container-registry-get-started-portal
#   - https://learn.microsoft.com/en-us/azure/aks/cluster-container-registry-integration?tabs=azure-cli#configure-acr-integration-for-existing-aks-clusters
#   - https://github.com/Azure/aks-create-action
#
# To configure this workflow:
#
# 1. Set the following secrets in your repository (instructions for getting these can be found at https://docs.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-cli%2Clinux):
#    - AZURE_CLIENT_ID
#    - AZURE_TENANT_ID
#    - AZURE_SUBSCRIPTION_ID
#
# 2. Set the following environment variables (or replace the values below):
#    - AZURE_CONTAINER_REGISTRY (name of your container registry / ACR)
#    - RESOURCE_GROUP (where your cluster is deployed)
#    - CLUSTER_NAME (name of your AKS cluster)
#    - CONTAINER_NAME (name of the container image you would like to push up to your ACR)
#    - IMAGE_PULL_SECRET_NAME (name of the ImagePullSecret that will be created to pull your ACR image)
#    - DEPLOYMENT_MANIFEST_PATH (path to the manifest yaml for your deployment)
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
# For more options with the actions used below please refer to https://github.com/Azure/login
name: Build and deploy an app to AKS

on:
  push:
    branches: ["master"]
  workflow_dispatch:

env:
  DOCKER_USERNAME: "sherifhassanmagdy" #${{secrets.DOCKER_USERNAME}} #"sherifhassan" #
  DOCKER_PASSWORD: "dckr_pat_hh7dlhzpWna-hCvlYlI1ebpMt9E" #${{secrets.DOCKER_PASSWORD}} #"HhuBt%8AYY*u6CY" #
  CONTAINER_NAME: "microservices-web" #${{env.CONTAINER_NAME}}
  DOCKER_IMAGE_NAME: "sherifhassanmagdy/microservices-web" #${{env.DOCKER_IMAGE_NAME}}
  RESOURCE_GROUP: "myResourceGroup" #${{env.RESOURCE_GROUP}}
  CLUSTER_NAME: "myAKSCluster" #${{env.CLUSTER_NAME}}
  DEPLOYMENT_MANIFEST_PATH: "deployment.yaml" #${{env.DEPLOYMENT_MANIFEST_PATH}}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

   #   - name: Set Azure Cloud Context
   #     run: az cloud set -n azurecloud

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # This line grants permission to write the ID token
    steps:
      - uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: "4fd797f1-0df9-4c6f-9064-f8d87a9e6703" #${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: "29253059-3360-47aa-b006-0b348878784f" #${{ secrets.AZURE_TENANT_ID }}
          subscription-id: "b059d3da-d469-4620-a868-895ad5e41dc2" #${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        env:
          GITHUB_TOKEN: "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" #${{ secrets.GITHUB_TOKEN }}
        with:
          kubelogin-version: 'latest'
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: |
            ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
